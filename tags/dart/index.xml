<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dart on Chang's blog</title><link>//blog.yech.xyz/tags/dart/</link><description>Recent content in dart on Chang's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>2020 by Ye Chang</copyright><lastBuildDate>Thu, 12 Mar 2020 18:43:07 +0800</lastBuildDate><atom:link href="//blog.yech.xyz/tags/dart/index.xml" rel="self" type="application/rss+xml"/><item><title>Cascade Notation in Dart is Magic</title><link>//blog.yech.xyz/posts/dart_tip_1/</link><pubDate>Thu, 12 Mar 2020 18:43:07 +0800</pubDate><guid>//blog.yech.xyz/posts/dart_tip_1/</guid><description>在编写 Python 代码的时候，sort() 和 sorted() 是两个不同的函数，对于列表 l = [2, 6, 1]， 可以用 l.sort() 来进行排序，也可以用 sorted(l) 来进行排序。但是如果打印出来会发现，
&amp;gt;&amp;gt;&amp;gt; print(l.sort()) None &amp;gt;&amp;gt;&amp;gt; print(sorted(l)) [1, 2, 6] 原因是 sorted() 返回（return）的是变换后的列表，.sort() 是对列表进行原位地排序，虽然列表改变了，但是返回的是 None。 所以要输出 .sort() 的结果，需要两步。
&amp;gt;&amp;gt;&amp;gt; l.sort() &amp;gt;&amp;gt;&amp;gt; print(l) [1, 2, 6] 这可能是 Python 维护了两个排序函数的原因，同时 sorted 的使用频率也高一点。
Dart 语言里面 List 也有 .sort() 函数，和 Python 类似，运行以下代码，输出的结果是 {null}。
void main() { var l = [2, 6, 1]; print(l.sort()); } 但是 Dart 里面无需额外的 sorted() 函数来实现这个功能，只要把 l.sort() 换成 l.</description></item></channel></rss>